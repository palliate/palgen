# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build (python-${{ matrix.python-version }}, ${{ matrix.os }})

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          #- macos-11
          #- macos-12
          - macos-latest
          #- ubuntu-20.04
          #- ubuntu-22.04
          - ubuntu-latest
          #- windows-2019
          #- windows-2022
          - windows-latest
        python-version: ["3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install -r requirements_dev.txt
   
    - name: Build package
      run: python -m build
    
    - name: Store package
      uses: actions/upload-artifact@v3
      with:
        name: palgen_${{ github.sha }}_${{ matrix.os }}_py${{ matrix.python-version }}
        path: dist/*

  test:
    name: Test (python-${{ matrix.python-version }}, ${{ matrix.os }})
    needs: build

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-11
          - macos-12
          - macos-latest
          - ubuntu-20.04
          - ubuntu-22.04
          - ubuntu-latest
          - windows-2019
          - windows-2022
          - windows-latest
        python-version: ["3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
  
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
  
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -r requirements_dev.txt
      
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: palgen_${{ github.sha }}_${{ matrix.os }}_py${{ matrix.python-version }}
          path: dist

      - name: Install package
        run: pip install --find-links=dist palgen
      
      - name: Test with pytest
        run: pytest --capture=tee-sys --continue-on-collection-errors --junit-xml pytest.xml
      
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Test Results (Python ${{ matrix.python-version }})
          path: pytest.xml
  lint:
    name: "Lint"
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Set up Python 
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -r requirements_dev.txt

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  publish-test-results:
    name: "Publish Test Results"
    needs: test
    runs-on: ubuntu-latest

    permissions:
      checks: write
      pull-requests: write
      contents: read
      issues: read
    
    if: always()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: test-results

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: "test-results/**/*.xml"