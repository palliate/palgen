[tox]
requires=
    tox>=4

env_list= lint, type, {linux,windows,mac}-py{310,311}
isolated_build = true

[gh-actions]
python =
    3.10: py310
    3.11: py311

[gh-actions:env]
PLATFORM =
    ubuntu-latest: linux
    macos-latest: mac
    windows-latest: windows

[testenv]
description = Run unit tests
platform = 
    linux: linux
    windows: win32
    mac: darwin
setenv = 
    PYTHONPATH = {toxinidir}
deps =
    -rrequirements.txt
    -rrequirements_dev.txt
commands =
    pytest --basetemp={envtmpdir} --capture=tee-sys --continue-on-collection-errors --junit-xml build/test/{envname}.xml

[testenv:lint]
description = Run linters
skip_install = true
setenv = 
    PYTHONPATH = {toxinidir}
deps =
    -rrequirements.txt
    -rrequirements_dev.txt
commands = 
    pylint src --exit-zero -j 0 -f colorized --reports y
    pylint src --exit-zero -j 0 -f json --output build/lint/pylint.json

[testenv:type]
description = Run type checker
skip_install = true
setenv = 
    PYTHONPATH = {toxinidir}
deps =
    -rrequirements.txt
    -rrequirements_dev.txt
commands = 
    mypy src --pretty --install-types --non-interactive --junit-xml build/lint/mypy.xml