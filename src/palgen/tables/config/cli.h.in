#pragma once
#include <unordered_map>
#include <map>
#include <optional>
#include <string_view>

namespace config {
using namespace std::string_view_literals;
struct cli_option {
  std::string_view key;
  std::string_view path;
  std::optional<char const> shorthand;
  std::string_view description = ""sv;
};

static const std::map<char, std::string_view> cli_shorthands = {
  $%- for value in settings %$
  $%- if value.settings|has_cli %$
  $%- for setting in value.settings %$
  $%- if setting.shorthand %$
  {'${ setting.shorthand }$', "${ setting.command or setting.name }$"},
  $%- endif %$
  $%- endfor %$
  $%- endif %$
  $%- endfor %$
};

static const std::unordered_map<std::string_view, cli_option> cli_map = {
  $%- for value in settings %$
  $%- if value.settings|has_cli %$

  $%- for setting in value.settings %$
    $%- if setting.cli -%$
    {"${ setting.command or setting.name }$",
     {
         .key = "${ setting.name }$"sv,
         .path = "${ setting.parent or value.parent or '' }$${ value.name|lower }$"sv,
      $%- if setting.shorthand %$
         .shorthand = '${ setting.shorthand }$',
      $%- endif %$
      $%- if setting.comment %$
         .description = R"""(${ setting.comment }$)"""sv,
      $%- endif %$
     }},
    $%- endif %$
  $%- endfor %$

  $%- endif %$
  $%- endfor %$
};
}  // namespace config
